package control;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import model.ItemPedido;
import model.Produto;

public class ItemPedidoDAO {
	
	private Connection con;
	private PreparedStatement ps;
	private ItemPedido ip;
	
	public boolean cadastraItemPedido(ItemPedido ip) throws SQLException {
		String sql = "insert into itemPedido values(default,?, ?, ?);";
		con = ConnectionDB.getConnection();
		
		ps = con.prepareStatement(sql);
		ps.setInt(1, ip.getPedido());
		ps.setInt(2, ip.getCodProd());
		ps.setInt(3, ip.getQuantidade());
		
		if(ps.executeUpdate()>0) {
			//updatePreco();
			return true;	
		}else {
			return false;
		}
	}
	
	/*public void updatePreco() throws SQLException {
		String sql = "call pr_atualiza();";
		con = ConnectionDB.getConnection();
		try(PreparedStatement preparedStatement = con.prepareStatement(sql)){
			preparedStatement.execute();
		}catch(SQLException e){
			e.printStackTrace();
		}
	}*/
	
	
	public String nomeProd(int cod) throws SQLException{
		String recebeRS = null;
		
			String sql = "select * from itens WHERE codigoProd = " + cod + ";";
			con = ConnectionDB.getConnection();
			ps = con.prepareStatement(sql);
			ResultSet rs = ps.executeQuery();
			while(rs.next()) {
				recebeRS = rs.getString("nome");
				return recebeRS;
			}	
		return recebeRS;
	}
	
	public double precoProd(int cod) throws SQLException {
		double recebeP = 0;
		String sql = "select * from itens where codigoProd = " + cod +";";
		con = ConnectionDB.getConnection();
		ps = con.prepareStatement(sql);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			recebeP = rs.getDouble("preço");
			return recebeP;
		}
		return recebeP; 
	}
	
	public List<ItemPedido> listaPedidos(int pedido) throws SQLException {
		List<ItemPedido> ipList;
		String sql = "select * from itemPedido where pedido =  " + pedido + ";";
		con = ConnectionDB.getConnection();
		PreparedStatement prep = con.prepareStatement(sql);
		ResultSet rs = prep.executeQuery();
		ipList = new ArrayList<ItemPedido>();
		
		while(rs.next()) {
			ip = new ItemPedido();
			ip.setId_iPedido(rs.getInt("id_iPedido"));
			ip.setPedido(rs.getInt("pedido"));
			ip.setCodProd(rs.getInt("codigoProd"));
			ip.setQuantidade(rs.getInt("quantidade"));
			//ip.setTotal(rs.getDouble("total"));
			ipList.add(ip);
		}
		return ipList;		
	}
	
	public void excluir(int cod) {
		String sql = "delete from itemPedido where id_iPedido = ?";
		con = ConnectionDB.getConnection();
		try(PreparedStatement preparedStatement = con.prepareStatement(sql)){
			preparedStatement.setInt(1, cod);
			preparedStatement.execute();
		}catch(SQLException e){
			e.printStackTrace();
		}
	}
	
	public ItemPedido getPedido(int capturei) throws SQLException{
		ItemPedido ip = new ItemPedido();
		String sql = "select from itemPedido where id_iPedido = ?";
		con = ConnectionDB.getConnection();
		PreparedStatement prepa = con.prepareStatement(sql);
		prepa.setInt(1, capturei);
		ResultSet res = prepa.executeQuery();
		while(res.next()) {
			ip.setId_iPedido(res.getInt("id_iPedido"));
			ip.setPedido(res.getInt("pedido"));
			ip.setCodProd(res.getInt("codigoProd"));
			ip.setQuantidade(res.getInt("quantidade"));
		}
		return ip;
	}
	
	public boolean pedidoExiste(int cod) throws SQLException {
		String sql = "select * from itemPedido where id_iPedido = ?;";
		con = ConnectionDB.getConnection();
		ps = con.prepareStatement(sql);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			if(rs.getInt(1) == cod) {
				return true;
			}
		}
		return false;
	}
	
	/*	
	
	public boolean prodExiste(int cod) throws SQLException {
		String sql = "select * from itens where codigoProd = ?;";
		con = ConnectionDB.getConnection();
		ps = con.prepareStatement(sql);
		ps.setInt(1, cod);
		ResultSet rs = ps.executeQuery();
		while(rs.next()) {
			if(rs.getInt(1) == cod) {
				return true;
			}
		}
		return false;
	}
	
	public boolean editar(Produto p, int cod) {
		boolean editado = false;
		
		try {
			if(prodExiste(cod)) {
				String sql = "update itens set nome = ?, descricao = ?, preço = ? where codigoProd = " + cod + ";";
				con = ConnectionDB.getConnection();
				PreparedStatement prs = con.prepareStatement(sql);
				
				prs.setString(1, p.getNome());
				prs.setString(2, p.getDescricao());
				prs.setDouble(3, p.getPreco());
				
				prs.execute();
				editado = true;	
				
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			System.out.print("erro" + e);
			e.printStackTrace();
		}
		return editado;
	}*/
}
